---
import '../styles/main.css';

export interface Props {
  title?: string;
  description?: string;
  keywords?: string;
}

const {
  title = 'My Random Calendar',
  description = 'Manage your calendar, schedule, and periodic events',
  keywords = 'calendar, schedule, events, planning',
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta content="width=device-width, initial-scale=1.0" name="viewport" />
    <link href="/favicon.svg" rel="icon" type="image/svg+xml" />
    <meta content={Astro.generator} name="generator" />

    <!-- SEO Meta Tags -->
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content={keywords} />

    <!-- Open Graph Meta Tags -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />

    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <script is:inline>
      // TODO: implement dark mode
      // const getThemePreference = () => {
      //   if (
      //     typeof localStorage !== 'undefined' &&
      //     localStorage.getItem('theme')
      //   ) {
      //     return localStorage.getItem('theme');
      //   }
      //   return window.matchMedia('(prefers-color-scheme: dark)').matches
      //     ? 'dark'
      //     : 'light';
      // };
      // const isDark = getThemePreference() === 'dark';
      // document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

      // if (typeof localStorage !== 'undefined') {
      //   const observer = new MutationObserver(() => {
      //     const isDark = document.documentElement.classList.contains('dark');
      //     localStorage.setItem('theme', isDark ? 'dark' : 'light');
      //   });
      //   observer.observe(document.documentElement, {
      //     attributes: true,
      //     attributeFilter: ['class'],
      //   });
      // }
    </script>
  </head>
  <body class="min-h-screen bg-gray-50">
    <slot />
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
