---
import { actions } from 'astro:actions';
import { format, addDays, subDays } from 'date-fns';
import Layout from '../../layouts/Layout.astro';
import type { TimeSlot, CalendarEvent } from '@/features/calendar/models';

export const prerender = false; // Required for server actions

// Get user from middleware
const { user } = Astro.locals;

// Get query parameters for state management
const url = new URL(Astro.request.url);
const selectedDateParam = url.searchParams.get('date');
const selectedDate = selectedDateParam ? new Date(selectedDateParam) : new Date();

// Fetch availability page data using new service
let googleCalendarEvents: CalendarEvent[] = [];
let calendarError: string | null = null;
let availabilityTimeSlots: TimeSlot[] = [];

if (user) {
  try {
    const formData = new FormData();
    formData.append('selectedDate', selectedDate.toISOString());
    
    const result = await Astro.callAction(actions.schedule.getAvailabilityPageData, formData);
    if (result.data) {
      googleCalendarEvents = result.data.googleCalendarEvents;
      calendarError = result.data.calendarError;
      availabilityTimeSlots = result.data.availabilityTimeSlots;
    }
  } catch (error) {
    console.error('Error fetching availability page data:', error);
  }
}
---

<Layout title="Availability - MyRandomCalendar">
  <div class="min-h-screen bg-gray-50">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <!-- Header -->
      <div class="mb-8">
        <div class="flex items-center justify-between">
          <div>
            <h1 class="text-3xl font-bold text-gray-900">Availability</h1>
            <p class="mt-2 text-gray-600">
              View your availability based on schedule blocks and Google Calendar events.
            </p>
          </div>
          <div class="flex items-center space-x-4">
            <a
              href="/schedule"
              class="px-4 py-2 text-sm bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors"
            >
              ‚Üê Back to Schedule
            </a>
          </div>
        </div>
      </div>

      <!-- Day Navigation -->
      <div class="bg-white rounded-lg shadow-md p-6 mb-6">
        <div class="flex justify-between items-center">
          <h2 class="text-2xl font-bold text-gray-900">Daily Availability</h2>
          <div class="flex items-center space-x-4">
            <!-- Day Navigation -->
            <div class="flex items-center space-x-2">
              <a
                href={`/schedule/availability?date=${format(subDays(selectedDate, 1), 'yyyy-MM-dd')}`}
                class="px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition-colors"
              >
                ‚Üê Previous
              </a>
              <span class="px-4 py-2 text-lg font-medium text-gray-900">
                {format(selectedDate, 'EEEE, MMMM d, yyyy')}
              </span>
              <a
                href={`/schedule/availability?date=${format(addDays(selectedDate, 1), 'yyyy-MM-dd')}`}
                class="px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded hover:bg-gray-200 transition-colors"
              >
                Next ‚Üí
              </a>
            </div>
            
            <!-- Today Button -->
            <a
              href={`/schedule/availability?date=${format(new Date(), 'yyyy-MM-dd')}`}
              class="px-3 py-1 text-sm bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors"
            >
              Today
            </a>
          </div>
        </div>
      </div>

      {calendarError ? (
        <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded mb-6">
          <h3 class="font-bold">Calendar Integration Notice:</h3>
          <p class="mb-2">{calendarError}</p>
          <p class="text-sm">
            {calendarError.includes('calendar access') || calendarError.includes('INSUFFICIENT_SCOPE') ? (
              <>
                <strong>Solution:</strong> You need to sign out and sign in with Google again to grant calendar permissions.
                <br />
                <a href="/logout" class="underline">Sign out</a> and then <a href="/login" class="underline">sign in with Google</a> again.
              </>
            ) : (
              'Make sure you\'re signed in with Google and have granted calendar access permissions.'
            )}
          </p>
        </div>
      ) : (
        <div class="space-y-6">
          <!-- Availability Summary -->
          <div class="bg-white rounded-lg shadow-md p-6">
            <h3 class="text-lg font-medium text-gray-900 mb-3">Availability Summary</h3>
            <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
              <div class="text-center">
                <div class="text-2xl font-bold text-green-600">
                  {availabilityTimeSlots.filter(slot => slot.type === 'available').length}
                </div>
                <div class="text-sm text-gray-600">Available Slots</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-red-600">
                  {availabilityTimeSlots.filter(slot => slot.type === 'busy').length}
                </div>
                <div class="text-sm text-gray-600">Busy Slots</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-blue-600">
                  {availabilityTimeSlots.filter(slot => slot.type === 'schedule-block').length}
                </div>
                <div class="text-sm text-gray-600">Schedule Blocks</div>
              </div>
              <div class="text-center">
                <div class="text-2xl font-bold text-purple-600">
                  {googleCalendarEvents.length}
                </div>
                <div class="text-sm text-gray-600">Calendar Events</div>
              </div>
            </div>
          </div>

          <!-- Time Slots -->
          {availabilityTimeSlots.length > 0 ? (
            <div class="bg-white rounded-lg shadow-md p-6">
              <h3 class="text-lg font-medium text-gray-900 mb-3">Time Slots</h3>
              <div class="space-y-2">
                {availabilityTimeSlots.map((slot) => (
                  <div
                    class={`p-3 rounded-lg border ${
                      slot.type === 'available' 
                        ? 'bg-green-50 border-green-200' 
                        : slot.type === 'busy'
                        ? 'bg-red-50 border-red-200'
                        : 'bg-blue-50 border-blue-200'
                    }`}
                  >
                    <div class="flex justify-between items-center">
                      <div class="flex items-center space-x-3">
                        <div class={`w-3 h-3 rounded-full ${
                          slot.type === 'available' 
                            ? 'bg-green-500' 
                            : slot.type === 'busy'
                            ? 'bg-red-500'
                            : 'bg-blue-500'
                        }`}></div>
                        <div>
                          <div class="font-medium text-gray-900">
                            {slot.title || (slot.type === 'available' ? 'Available' : slot.type === 'busy' ? 'Busy' : 'Schedule Block')}
                          </div>
                          <div class="text-sm text-gray-600">
                            {format(new Date(slot.start), 'h:mm a')} - {format(new Date(slot.end), 'h:mm a')}
                          </div>
                        </div>
                      </div>
                      <div class="text-sm text-gray-500">
                        {slot.priority && (
                          <span class={`px-2 py-1 text-xs rounded-full ${
                            slot.priority === 'high' ? 'bg-red-100 text-red-800' :
                            slot.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :
                            'bg-green-100 text-green-800'
                          }`}>
                            {slot.priority}
                          </span>
                        )}
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          ) : (
            <div class="bg-white rounded-lg shadow-md p-6">
              <div class="text-center py-12">
                <div class="text-gray-400 text-6xl mb-4">üìÖ</div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No availability data</h3>
                <p class="text-gray-500 mb-4">
                  No schedule blocks or calendar events found for this day.
                </p>
                <a
                  href="/schedule/maintainer"
                  class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors"
                >
                  Create Schedule Block
                </a>
              </div>
            </div>
          )}
        </div>
      )}
    </div>
  </div>
</Layout>
