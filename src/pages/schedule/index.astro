---
import { actions } from 'astro:actions';
import type { ScheduleBlock } from '../../features/schedule/models/ScheduleBlocks.types';
import { PRIORITY_COLORS, formatDaysOfWeek } from '../../features/schedule/services/constants';
import Layout from '../../layouts/Layout.astro';
import type { CalendarEvent } from '@/features/calendar/models';

export const prerender = false; // Required for server actions

// Get user from middleware
const { user } = Astro.locals;

// Get query parameters for state management
const url = new URL(Astro.request.url);
const successMessage = url.searchParams.get('success');
const errorMessage = url.searchParams.get('error');

// Fetch schedule page data using new service
let scheduleBlocks: ScheduleBlock[] = [];
let googleCalendarEvents: CalendarEvent[] = [];
let calendarError: string | null = null;

if (user) {
  try {
    const result = await Astro.callAction(actions.schedule.getSchedulePageData, new FormData());
    if (result.data) {
      scheduleBlocks = result.data.scheduleBlocks;
      googleCalendarEvents = result.data.googleCalendarEvents;
      calendarError = result.data.calendarError;
    }
  } catch (error) {
    console.error('Error fetching schedule page data:', error);
  }
}
---

<Layout>
  <div class="container mx-auto px-4 py-8">
    {user ? (
      <div class="max-w-6xl mx-auto">
        <!-- Header -->
        <div class="mb-8">
          <div class="flex justify-between items-start">
            <div>
              <h1 class="text-3xl font-bold text-gray-900 mb-2">Schedule Management</h1>
              <p class="text-gray-600">
                View and manage your schedule blocks and availability for optimal event planning.
              </p>
              {!calendarError && (
                <p class="text-sm mt-2">
                  <strong>Google Calendar Events:</strong> {googleCalendarEvents.length} events loaded
                </p>
              )}
            </div>
        <!-- Action Buttons -->
        <div class="mb-6 flex justify-between items-center">
          <div class="flex space-x-4">
            <a 
              href="/schedule/maintainer" 
              class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded transition-colors"
            >
              Create New Schedule
            </a>
            <a 
              href="/schedule/availability" 
              class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition-colors"
            >
              View Availability
            </a>
          </div>
          <button 
            id="refreshCalendarBtn"
            class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded text-sm transition-colors"
          >
            Refresh Calendar
          </button>
        </div>
          </div>
        </div>
        
        <!-- Success/Error Messages -->
        {successMessage && (
          <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6">
            <h3 class="font-bold">Success!</h3>
            <p>
              {successMessage === 'default-created' && 'Default schedule blocks created successfully!'}
            </p>
          </div>
        )}
        
        {errorMessage && (
          <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
            <h3 class="font-bold">Error:</h3>
            <p>{errorMessage}</p>
          </div>
        )}

        <!-- Handle action results -->
        {(() => {
          const result = Astro.getActionResult(actions.schedule.createDefaultScheduleBlocks);
          if (result && !result.error) {
            return (
              <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded mb-6">
                <h3 class="font-bold">Success!</h3>
                <p>Default schedule blocks created successfully!</p>
              </div>
            );
          }
          if (result?.error) {
            return (
              <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
                <h3 class="font-bold">Error:</h3>
                <p>{result.error.message}</p>
              </div>
            );
          }
        })()}
        
        {calendarError ? (
          <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded mb-6">
            <h3 class="font-bold">Google Calendar Integration Notice:</h3>
            <p class="mb-2">{calendarError}</p>
            <p class="text-sm">
              {calendarError.includes('calendar access') || calendarError.includes('INSUFFICIENT_SCOPE') ? (
                <>
                  <strong>Solution:</strong> You need to sign out and sign in with Google again to grant calendar permissions.
                  <br />
                  <a href="/logout" class="underline">Sign out</a> and then <a href="/login" class="underline">sign in with Google</a> again.
                </>
              ) : (
                'Make sure you\'re signed in with Google and have granted calendar access permissions.'
              )}
            </p>
          </div>
        ) : null}
        
        <!-- Schedule Blocks Content -->
          <div class="bg-white rounded-lg shadow-md p-6">
            <div class="flex justify-between items-center mb-6">
              <h2 class="text-2xl font-bold text-gray-900">Schedule Blocks</h2>
              <div class="flex space-x-4">
                <a
                  href="/schedule/maintainer"
                  class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded transition-colors"
                >
                  Create New Schedule
                </a>
                {scheduleBlocks.length === 0 && (
                  <form method="POST" action={actions.schedule.createDefaultScheduleBlocks} class="inline">
                    <input type="hidden" name="timezone" value="UTC" />
                    <button
                      type="submit"
                      class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded transition-colors"
                    >
                      Create Default Schedule
                    </button>
                  </form>
                )}
              </div>
            </div>

            {scheduleBlocks.length === 0 ? (
              <div class="text-center py-12">
                <div class="text-gray-400 text-6xl mb-4">üìÖ</div>
                <h3 class="text-lg font-medium text-gray-900 mb-2">No schedule blocks found</h3>
                <p class="text-gray-500 mb-4">Create your first schedule block to get started</p>
                <a
                  href="/schedule/maintainer"
                  class="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md transition-colors"
                >
                  Create Schedule Block
                </a>
              </div>
            ) : (
              <div class="space-y-6">
                {scheduleBlocks.map(block => (
                  <div
                    class={`border rounded-lg p-4 transition-colors ${
                      block.isActive 
                        ? 'bg-white border-gray-200 hover:border-gray-300' 
                        : 'bg-gray-50 border-gray-200 opacity-75'
                    }`}
                  >
                    <div class="flex items-start justify-between">
                      <div class="flex-1">
                        <div class="flex items-center space-x-3 mb-2">
                          <h4 class="text-lg font-medium text-gray-900">
                            {block.title}
                          </h4>
                          <span class={`px-2 py-1 text-xs font-medium rounded-full border ${
                            PRIORITY_COLORS[block.priority]
                          }`}>
                            {block.priority}
                          </span>
                          {!block.isActive && (
                            <span class="px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-600 border border-gray-200">
                              Inactive
                            </span>
                          )}
                        </div>
                        
                        <div class="text-sm text-gray-600 space-y-1">
                          <div class="flex items-center space-x-4">
                            <span>‚è∞ {block.startTime} - {block.endTime}</span>
                            <span>üìÖ {formatDaysOfWeek(block.daysOfWeek)}</span>
                          </div>
                          
                          {block.description && (
                            <p class="text-gray-500">{block.description}</p>
                          )}
                          
                          {(block.bufferBefore > 0 || block.bufferAfter > 0) && (
                            <div class="text-xs text-gray-500">
                              Buffer: {block.bufferBefore > 0 && `-${block.bufferBefore}min`} 
                              {block.bufferBefore > 0 && block.bufferAfter > 0 && ', '}
                              {block.bufferAfter > 0 && `+${block.bufferAfter}min`}
                            </div>
                          )}
                        </div>
                      </div>
                      
                      <div class="flex items-center space-x-2 ml-4">
                        <a
                          href={`/schedule/maintainer?edit=${block.id}`}
                          class="px-3 py-1 text-xs bg-blue-100 text-blue-800 rounded-md hover:bg-blue-200 transition-colors"
                        >
                          Edit
                        </a>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        <!-- Quick Stats -->
        <div class="mt-8 bg-gray-50 rounded-lg p-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Quick Stats</h3>
          <div class="grid grid-cols-2 md:grid-cols-4 gap-4">
            <div class="text-center">
              <div class="text-2xl font-bold text-blue-600">{scheduleBlocks.length}</div>
              <div class="text-sm text-gray-600">Total Blocks</div>
            </div>
            <div class="text-center">
              <div class="text-2xl font-bold text-green-600">
                {scheduleBlocks.filter(b => b.isActive).length}
              </div>
              <div class="text-sm text-gray-600">Active Blocks</div>
            </div>
            <div class="text-center">
              <div class="text-2xl font-bold text-purple-600">
                {scheduleBlocks.filter(b => b.isRecurring).length}
              </div>
              <div class="text-sm text-gray-600">Recurring</div>
            </div>
            <div class="text-center">
              <div class="text-2xl font-bold text-orange-600">
                {scheduleBlocks.filter(b => b.priority === 'high').length}
              </div>
              <div class="text-sm text-gray-600">High Priority</div>
            </div>
          </div>
        </div>
        
        <!-- Navigation -->
        <div class="mt-6">
          <a 
            href="/calendar" 
            class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded mr-4"
          >
            View Calendar
          </a>
          <a 
            href="/" 
            class="bg-gray-600 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded mr-4"
          >
            Back to Home
          </a>
          <a 
            href="/logout" 
            class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded"
          >
            Logout
          </a>
        </div>
      </div>
    ) : (
      <div class="max-w-2xl mx-auto">
        <div class="bg-yellow-100 border border-yellow-400 text-yellow-700 px-4 py-3 rounded mb-6">
          <h2 class="text-xl font-bold">Access Denied</h2>
          <p>You must be logged in to manage your schedule settings.</p>
        </div>
        
        <div class="bg-white rounded-lg shadow-md p-6">
          <div class="text-center space-y-4">
            <p class="text-gray-600">Please log in to access your schedule settings.</p>
            
            <div class="flex space-x-4 justify-center">
              <a 
                href="/login" 
                class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded"
              >
                Login
              </a>
              <a 
                href="/register" 
                class="bg-green-600 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
              >
                Register
              </a>
            </div>
          </div>
        </div>
      </div>
    )}
  </div>
</Layout>

<script>
  import { setupCalendarRefreshButton } from '../../features/schedule/lib/calendar-refresh';
  
  // Setup calendar refresh button
  setupCalendarRefreshButton('refreshCalendarBtn');
</script>